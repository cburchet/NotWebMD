public class EDiagnoseController {
    public String state {get; set;}
    public Boolean hasUsedSymptomDiagnosisMachine {get; set;}
    public Integer age {get; set;}
    public String gender {get; set;}
    public Doctor__c currentDoctor {get; set;}
    
    public List<Doctor__c> doctors {
        get{
            // Temporary  switch to hard-code the populating of the doctors.
            switch on this.state {
                when 'Virgninia' {
                    this.doctors = populateVADoctors();
                }
                when 'Pennsylvania' {
                    this.doctors = populatePADoctors();
                }
                when 'California' {
                    this.doctors = populateCADoctors();
                }
                when else {
                    this.doctors = populateVADoctors();
                }
            }
			return this.doctors;
        } 
        set{doctors = value;}
    }
     
    // This doesn't currently do anything other than call the get property for this.doctors which hard-codes the list of doctors.
    // Once back end development has started, this will query the necessary doctors
    public void filterDoctors(){
        List<Doctor__c> docs = new List<Doctor__c>();
        this.doctors = docs;
    }
    
    // The three below populateDoctor methods are temporary. Used for Front End testing.
    private List<Doctor__c> populateVADoctors(){
        List<Doctor__c> docs = new List<Doctor__c>();
        docs.add(new Doctor__c(Name='Dr.Ailment', Phone_Number__c='000 000 0000', State__c='Virginia', City__c='Reston', Street_Address__c='1234 W St', Suite_No__c=101));
        docs.add(new Doctor__c(Name='Dr.Bones', Phone_Number__c='000 000 0000', State__c='Virginia', City__c='Reston', Street_Address__c='1234 N St', Suite_No__c=101));
        docs.add(new Doctor__c(Name='Dr.Chicklet', Phone_Number__c='000 000 0000', State__c='Virginia', City__c='Herndon', Street_Address__c='1234 E St', Suite_No__c=101));
    	return docs;
    }
    
    private List<Doctor__c> populatePADoctors(){
        List<Doctor__c> docs = new List<Doctor__c>();
        docs.add(new Doctor__c(Name='Dr.Diagnosis', Phone_Number__c='000 000 0000', State__c='Pennsylvania', City__c='Philadelphia', Street_Address__c='1234 W St', Suite_No__c=101));
        docs.add(new Doctor__c(Name='Dr.Effiel', Phone_Number__c='000 000 0000', State__c='Pennsylvania', City__c='Philadelphia', Street_Address__c='1234 S St', Suite_No__c=101));
        return docs;
    }
    
    private List<Doctor__c> populateCADoctors(){
        List<Doctor__c> docs = new List<Doctor__c>();
        docs.add(new Doctor__c(Name='Dr.Filament', Phone_Number__c='000 000 0000', State__c='California', City__c='Los Angelos', Street_Address__c='1234 E St', Suite_No__c=101));
        docs.add(new Doctor__c(Name='Dr.Gastro', Phone_Number__c='000 000 0000', State__c='California', City__c='Los Angelos', Street_Address__c='1234 E St', Suite_No__c=101));
        return docs;
    }
    
    // Populate dropdown list of states
    public List<SelectOption> getListOfStates(){
        List<SelectOption> options = new List<SelectOption>();
		options.add(new SelectOption('Alabama','Alabama'));
        options.add(new SelectOption('Alaska','Alaska'));
        options.add(new SelectOption('Arizona','Arizona'));
        options.add(new SelectOption('Arkansas','Arkansas'));
        options.add(new SelectOption('California','California'));
        options.add(new SelectOption('Colorado','Colorado'));
        options.add(new SelectOption('Connecticut','Connecticut'));
        options.add(new SelectOption('Delaware','Delaware'));
        options.add(new SelectOption('Florida','Florida'));
        options.add(new SelectOption('Georgia','Georgia'));
        options.add(new SelectOption('Hawaii','Hawaii'));
        options.add(new SelectOption('Idaho','Idaho'));
        options.add(new SelectOption('Illinois','Illinois'));
        options.add(new SelectOption('Indiana','Indiana'));
        options.add(new SelectOption('Iowa','Iowa'));
        options.add(new SelectOption('Kansas','Kansas'));
        options.add(new SelectOption('Kentucky','Kentucky'));
        options.add(new SelectOption('Louisiana','Louisiana'));
        options.add(new SelectOption('Maine','Maine'));
        options.add(new SelectOption('Maryland','Maryland'));
        options.add(new SelectOption('Massachusetts','Massachusetts'));
        options.add(new SelectOption('Michigan','Michigan'));
        options.add(new SelectOption('Minnesota','Minnesota'));
        options.add(new SelectOption('Mississippi','Mississippi'));
        options.add(new SelectOption('Missouri','Missouri'));
        options.add(new SelectOption('Montana','Montana'));
        options.add(new SelectOption('Nebraska','Nebraska'));
        options.add(new SelectOption('Nevada','Nevada'));
        options.add(new SelectOption('New Hampshire','New Hampshire'));
        options.add(new SelectOption('New Jersey','New Jersey'));
        options.add(new SelectOption('New Mexico','New Mexico'));
        options.add(new SelectOption('New York','New York'));
        options.add(new SelectOption('North Carolina','North Carolina'));
        options.add(new SelectOption('North Dakota','North Dakota'));
        options.add(new SelectOption('Ohio','Ohio'));
        options.add(new SelectOption('Oklahoma','Oklahoma'));
        options.add(new SelectOption('Oregon','Oregon'));
        options.add(new SelectOption('Pennsylvania','Pennsylvania'));
        options.add(new SelectOption('Rhode Island','Rhode Island'));
        options.add(new SelectOption('South Carolina','South Carolina'));
        options.add(new SelectOption('South Dakota','South Dakota'));
        options.add(new SelectOption('Tennessee','Tennessee'));
        options.add(new SelectOption('Texas','Texas'));
        options.add(new SelectOption('Utah','Utah'));
        options.add(new SelectOption('Vermont','Vermont'));
        options.add(new SelectOption('Virginia','Virginia'));
        options.add(new SelectOption('Washington','Washington'));
        options.add(new SelectOption('West Virginia','West Virginia'));
        options.add(new SelectOption('Wisconsin','Wisconsin'));
        options.add(new SelectOption('Wyoming','Wyoming'));
        return options;
    }
    
    
    // Redirect user to Book An Appointment Module
    public PageReference toAppointment(){
        return Page.StatePage;
    }
    
    // Redirect user to State Page
    public PageReference toStatePage(){
        return Page.StatePage;
    }
    
    // Redirect user to Home Page
    public PageReference toHomePage(){
        return Page.HomePage;
    }
    
    // Redirect user to Diagnosis Module
    public PageReference toDiagnosisModule(){
        return Page.HomePage;
    }

    // Redirect user to Doctor Module   
    public PageReference toDoctorModule(){
        return Page.HomePage;
    }
    
}